openapi: 3.0.3
info:
  title: ECC Product API
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
tags:
  - name: product
    description: Everything about the products the ECC develops and maintains
paths:
  /health:
    get:
      summary: Determine the health of the API
      operationId: getHealth
      responses:
        '200':
          description: successful operation
        '503':
          description: Service not available
  /product:
    get:
      tags:
        - product
      summary: Get all products
      operationId: getProducts
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - product
      summary: Add a product
      operationId: addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProduct'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: invalid or missing fields
  /product/{productId}:
    get:
      tags:
        - product
      summary: Find product by ID
      description: Returns a single product
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          example: 4
          description: ID of product to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid ID supplied
        '404':
          description: Product not found
    put:
      tags:
        - product
      summary: Update a product
      description: Updates a product and returns the updated producct
      operationId: updateProductById
      parameters:
        - name: productId
          in: path
          example: 4
          description: ID of product to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatedProduct'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid ID or property supplied
        '404':
          description: Product not found
    delete:
      tags:
        - product
      summary: Delete a product
      description: Deletes a product
      operationId: deleteProductById
      parameters:
        - name: productId
          in: path
          example: 4
          description: ID of product to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid ID supplied
        '404':
          description: Product not found
components:
  schemas:
    Product:
      type: object
      required:
        - productId
        - productName
        - productOwnerName
        - developers
        - scrumMasterName
        - startDate
        - methodology
        - location
      properties:
        productId:
          type: integer
          format: int64
          example: 4
        productName:
          type: string
          example: BC Policy Framework For GitHub
        productOwnerName:
          type: string
          example: Mark Brown
        developers:
          type: array
          items:
            type: string
          example: [Cindy White, Carl Grey]
        scrumMasterName:
          type: string
          example: Bob Green
        startDate:
          type: string
          format: date
          example: 2024/02/03
        methodology:
          type: string
          enum:
            - Agile
            - Waterfall
        location:
          type: string
          example: https://github.com/bcgov/BC-Policy-Framework-For-GitHub
    NewProduct:
      type: object
      required:
        - productName
        - productOwnerName
        - developers
        - scrumMasterName
        - startDate
        - methodology
        - location
      properties:
        productName:
          type: string
          example: BC Policy Framework For GitHub
        productOwnerName:
          type: string
          example: Mark Brown
        developers:
          type: array
          items:
            type: string
          example: [Cindy White, Carl Grey]
        scrumMasterName:
          type: string
          example: Bob Green
        startDate:
          type: string
          format: date
          example: 2024/02/03
        methodology:
          type: string
          enum:
            - Agile
            - Waterfall
        location:
          type: string
          example: https://github.com/bcgov/BC-Policy-Framework-For-GitHub
    UpdatedProduct:
      type: object
      properties:
        productName:
          type: string
          example: BC Policy Framework For GitHub
        productOwnerName:
          type: string
          example: Mark Brown
        developers:
          type: array
          items:
            type: string
          example: [Cindy White, Carl Grey]
        scrumMasterName:
          type: string
          example: Bob Green
        startDate:
          type: string
          format: date
          example: 2024/02/03
        methodology:
          type: string
          enum:
            - Agile
            - Waterfall
        location:
          type: string
          example: https://github.com/bcgov/BC-Policy-Framework-For-GitHub
